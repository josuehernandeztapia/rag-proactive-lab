PINECONE_API_KEY="tu_api_key_de_pinecone"
# Formato: <region>-<cloud>, ej: us-east-1-aws
PINECONE_ENV="us-east-1-aws"
PINECONE_INDEX="ssot-higer"
PINECONE_INDEX_CASES="ssot-higer-cases"   # índice adicional con casos (chat+visión)
PINECONE_INDEX_DIAGRAMS="SSOT-HIGER-DIAGRAMAS-ELECT"  # índice separado para diagramas eléctricos (opcional)
OPENAI_API_KEY="tu_api_key_de_openai"
PDF_FILE="SSOT-HIGER.pdf"  # Ruta relativa al directorio del proyecto
BM25_INDEX_FILE="bm25_index.pkl"  # Opcional: para búsqueda híbrida
HYBRID_ALPHA="0.6"  # Peso de vector vs BM25 (0..1)
HYBRID_TOP_K="8"     # Resultados finales a usar en el prompt
HYBRID_DEDUPE_THRESHOLD="0.75"  # 0..1 (Jaccard)
RETRIEVER_K="4"      # k para el retriever del API
APP_VERSION="0.2.0"  # Versión actual de la app
BUILD_SHA=""         # Opcional, commit SHA
BUILD_TIME=""        # Opcional, timestamp ISO-8601 (ej. 2025-09-07T07:40:00Z)
BRAND_NAME="Higer"   # Marca para metadatos/tablas
MODEL_NAME="H6C"     # Modelo por defecto
PARTS_INDEX_FILE="parts_index.json"  # Salida del catálogo de partes local
NGROK_DOMAIN=""       # Opcional: dominio reservado de ngrok (si tienes plan de pago)
PUBLIC_BASE_URL=""     # Requerido si habilitas validación Twilio (ej: https://<tu-ngrok>.ngrok.app)
FORCE_MODEL_FILTER="0" # 1/true para forzar filtro por MODEL_NAME en Pinecone
USE_DIAGRAMS="1"      # 1/true para activar índice de diagramas
DIAGRAM_TOP_K="6"     # top-k para resultados de diagramas

# Modelos OpenAI
OCR_MODEL="gpt-4o-mini"  # Modelo para OCR de imágenes (OpenAI Vision). Ej: gpt-4o, gpt-4o-mini
LLM_MODEL="gpt-4o"       # LLM para respuestas de texto (ChatOpenAI)
ASR_MODEL="whisper-1"    # Modelo de transcripción de audio (ASR)
EMBEDDINGS_MODEL="text-embedding-3-small"  # Embeddings para Pinecone (1536 small, 3072 large)

# Almacenamiento de logs
STORAGE_BACKEND="jsonl"  # jsonl | neo4j | dual
LOG_DIR="logs"
LOG_FILE="logs/events.jsonl"

# Neo4j (opcional)
# Para Aura: NEO4J_URI="neo4j+s://<id>.databases.neo4j.io"
# Para local: NEO4J_URI="bolt://localhost:7687"
NEO4J_URI=""
NEO4J_USER=""
NEO4J_PASSWORD=""
NEO4J_DATABASE="neo4j"

# Postgres/Neon (opcional)
# Ejemplo DSN Neon (incluye sslmode):
# POSTGRES_URL="postgresql://USER:PASSWORD@ep-xyz-1234-abc.us-east-2.aws.neon.tech/DB?sslmode=require"
POSTGRES_URL=""
DATABASE_URL=""  # Alternativa para SQLAlchemy o helpers

# S3 (opcional, para intake de evidencias)
S3_ENDPOINT=""
S3_BUCKET=""
S3_ACCESS_KEY=""
S3_SECRET_KEY=""
S3_REGION="us-east-1"

# Warranty policy (months/km)
WARRANTY_ENGINE_MONTHS="36"
WARRANTY_ENGINE_KM="80000"
WARRANTY_POWERTRAIN_MONTHS="36"
WARRANTY_POWERTRAIN_KM="80000"
WARRANTY_SUSPENSION_MONTHS="24"
WARRANTY_SUSPENSION_KM="40000"
WARRANTY_ELECTRICAL_MONTHS="24"
WARRANTY_ELECTRICAL_KM="40000"
WARRANTY_AC_MONTHS="24"
WARRANTY_AC_KM="40000"
WARRANTY_GENERAL_MONTHS="24"
WARRANTY_GENERAL_KM="40000"
WARRANTY_CONSUMABLE_MONTHS="0"
WARRANTY_CONSUMABLE_KM="0"
WARRANTY_PREMATURE_BRAKE_KM="10000"

WARRANTY_STEERING_MONTHS="24"
WARRANTY_STEERING_KM="40000"
WARRANTY_SHOCKS_MONTHS="12"
WARRANTY_SHOCKS_KM="30000"
WARRANTY_BRAKES_SYSTEM_MONTHS="24"
WARRANTY_BRAKES_SYSTEM_KM="40000"
WARRANTY_BODY_MONTHS="24"
WARRANTY_BODY_KM="0"
WARRANTY_ACCESSORIES_MINOR_MONTHS="6"
WARRANTY_ACCESSORIES_MINOR_KM="10000"
WARRANTY_BATTERY_MONTHS="12"
WARRANTY_BATTERY_KM="0"
WARRANTY_EXHAUST_MONTHS="36"
WARRANTY_EXHAUST_KM="80000"

# Twilio (opcional, para descargar y transcribir audios de WhatsApp)
TWILIO_SID=""
TWILIO_AUTH_TOKEN=""
TWILIO_VALIDATE="0"   # 1/true para validar firma X-Twilio-Signature (requiere PUBLIC_BASE_URL)

# CORS
CORS_ORIGINS=""  # Coma-separado (ej: http://localhost:4200,https://miapp.com) o '*' para todos

# Admin/maintenance
MAINTENANCE_ENABLE="0"
ADMIN_TOKEN=""
ALLOW_NONLOCAL_ADMIN="0"

# Pinecone alias (opcional)
PINECONE_INDEX_ALIAS=""  # Si usas alias nativos, define el nombre del alias aquí (ej: ssot-higer-alias)

# Métricas
METRICS_ENABLE="1"  # 1/true para habilitar /metrics estilo Prometheus

# Casos (RAG con histórico)
CASES_BOOST="0.3"                # incremento al score híbrido cuando source=case con evidence_type
TABLES_BOOST="0.25"              # incremento para filas 'table' (manual de partes)
CASE_FIRST_STRICT="1"            # 1/true para anteponer casos con evidence_type coincidente

# Salida y límites
# Respuestas API (por defecto acotadas para WhatsApp)
ANSWER_MAX_CHARS="1450"
# Límite duro para webhook WhatsApp
WHATSAPP_MAX_CHARS="1600"
CRITICAL_MAX_CHARS="900"
URGENT_MAX_CHARS="1200"
HISTORY_LIMIT="8"
CASE_PREFIX="AGS"
CASE_TTL_HOURS="72"
PLAYBOOKS_FILE="playbooks.json"
# Tendencias (re-rank dinámico)
TREND_ENABLE="1"
TREND_WINDOW_DAYS="14"
TREND_DECAY_HALF_LIFE_DAYS="7"
TREND_BOOST_MAX="0.35"
# Formato opcional: clave=pal1|pal2;clave2=palA|palB
TREND_KEYWORDS="catalizador=catalizador|catalítico|convertidor catalitico|p0420;sensor=sensor|captador|sonda|lambda|O2"

# Sugerencias producción:
# - Mayor ventana y half-life menor para enfatizar recencia
# TREND_WINDOW_DAYS="21"
# TREND_DECAY_HALF_LIFE_DAYS="5"
